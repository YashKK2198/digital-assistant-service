# ===================================================================
# DIGITAL ASSISTANT SERVICE CONFIGURATION
# ===================================================================

# Application Information
spring.application.name=digital-assistant-service

# ===================================================================
# SERVER CONFIGURATION
# ===================================================================

# Port Configuration
# The service will be available at http://localhost:8080
server.port=8080

# Enable graceful shutdown for better deployment practices
server.shutdown=graceful

# ===================================================================
# DATABASE CONFIGURATION
# ===================================================================

# H2 In-Memory Database Configuration
# Perfect for development, testing, and demonstration purposes
# Data is stored in memory and reset when application restarts

# H2 Database URL - creates an in-memory database named 'assistantdb'
spring.datasource.url=jdbc:h2:mem:assistantdb

# H2 Database Driver
spring.datasource.driverClassName=org.h2.Driver

# Database Credentials (H2 defaults)
spring.datasource.username=sa
spring.datasource.password=

# ===================================================================
# JPA/HIBERNATE CONFIGURATION
# ===================================================================

# Database Platform - tells Hibernate to use H2 dialect
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# DDL Strategy - creates tables automatically from entity classes
# Options: create, create-drop, update, validate, none
# create-drop: Creates tables on startup, drops on shutdown (good for development)
spring.jpa.hibernate.ddl-auto=create-drop

# Show SQL queries in console (helpful for debugging)
spring.jpa.show-sql=true

# Format SQL queries for better readability
spring.jpa.properties.hibernate.format_sql=true

# ===================================================================
# H2 CONSOLE CONFIGURATION
# ===================================================================

# Enable H2 web console for database inspection
# Access at: http://localhost:8080/h2-console
spring.h2.console.enabled=true

# Custom path for H2 console
spring.h2.console.path=/h2-console

# Allow H2 console access from any IP (development only)
spring.h2.console.settings.web-allow-others=true

# ===================================================================
# SPRING BOOT ACTUATOR CONFIGURATION
# ===================================================================

# Expose health and info endpoints for monitoring
management.endpoints.web.exposure.include=health,info,metrics

# Show detailed health information
management.endpoint.health.show-details=always

# Custom info for the info endpoint
management.info.env.enabled=true
info.app.name=Digital Assistant Service
info.app.description=A service for creating and interacting with digital assistants
info.app.version=1.0.0

# ===================================================================
# LOGGING CONFIGURATION
# ===================================================================

# Set logging level for our application packages
logging.level.com.example.digitalassistant=DEBUG

# Set logging level for Spring Web (useful for debugging HTTP requests)
logging.level.org.springframework.web=INFO

# Custom logging pattern for console output
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# ===================================================================
# VALIDATION CONFIGURATION
# ===================================================================

# Throw exception if no handler found (better error handling)
spring.mvc.throw-exception-if-no-handler-found=true

# Enable static resource mapping for frontend
spring.web.resources.add-mappings=true

# ===================================================================
# CORS CONFIGURATION
# ===================================================================

# Global CORS configuration for frontend integration
# In production, replace "*" with specific allowed origins
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*

# ===================================================================
# CUSTOM APPLICATION PROPERTIES
# ===================================================================

# Custom properties for the Digital Assistant Service
# These can be accessed using @Value annotation in Java code

# Maximum number of assistants allowed (for resource management)
app.assistant.max-count=100

# Default response when assistant is not found
app.assistant.default-error-response=Sorry, I couldn't find that assistant. Please check the name and try again.

# Enable/disable assistant creation endpoint
app.assistant.creation-enabled=true
